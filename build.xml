<project name="Haskell" basedir=".">
    <description>Haskell plugin</description>

    <taskdef classname="jflex.anttask.JFlexTask" name="jflex" classpath="lib/jflex-1.5.1.jar"/>

    <property name="build.dir" value="${basedir}/build"/>
    <property name="cabal.lexer.result.file" value="plugin/src/org/jetbrains/cabal/parser/_CabalLexer.java"/>
    <property name="cabal.lexer.flex.file" value="plugin/src/org/jetbrains/cabal/parser/Cabal.flex"/>
    <property name="haskell.lexer.result.file" value="plugin/src/org/jetbrains/haskell/parser/lexer/_HaskellLexer.java"/>
    <property name="haskell.lexer.flex.file" value="plugin/src/org/jetbrains/haskell/parser/lexer/Haskell.flex"/>
    <property name="idea" value="${build.dir}/idea-IC-141.SNAPSHOT"/>
    <property name="idea.download.url" value="http://teamcity.jetbrains.com/guestAuth/repository/download/bt410/426153:id/ideaIC-141.SNAPSHOT.tar.gz"/>
    <property name="external.annotations.path" value="${basedir}/annotations"/>
    <property name="plugin.destination" value="${build.dir}/haskell-plugin/lib/" />
    <property name="build.number" value="snapshot"/>

    <path id="kotlinc-jar">
        <fileset file="${build.dir}/kotlinc/lib/*.jar"/>
        <fileset file="${basedir}/lib/asm-all.jar"/>
    </path>

    <path id="build.classpath">
        <fileset dir="${idea}/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${basedir}/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="compile.haskell.lexer">
        <sequential>
            <delete file="${haskell.lexer.result.file}"/>
            <jflex file="${haskell.lexer.flex.file}"
                   skeleton="tools/idea-flex.skeleton"/>
        </sequential>
    </target>

    <target name="compile.grammar.lexer">
        <sequential>
            <delete file="./generator/src/org/jetbrains/generator/GrammarLexer.java"/>
            <jflex file="./generator/src/org/jetbrains/generator/Generator.flex" />
        </sequential>
    </target>

    <target name="compile.hamlet.lexer">
        <sequential>
            <delete file="./plugin/src/org/jetbrains/yesod/hamlet/parser/_HamletLexer.java"/>
            <jflex file="./plugin/src/org/jetbrains/yesod/hamlet/parser/Hamlet.flex"
                   skeleton="tools/idea-flex.skeleton"/>
        </sequential>
    </target>

    <target name="compile.cabal.lexer">
        <sequential>
            <delete file="${cabal.lexer.result.file}"/>
            <jflex file="${cabal.lexer.flex.file}"
                   skeleton="tools/idea-flex.skeleton"/>
        </sequential>
    </target>



    <!-- Unpack idea-*.zip file -->
    <target name="idea" depends="download.idea" description="Unzip downloaded artifacts and set up idea.home">
        <delete dir="${idea}"/>
        <mkdir dir="${idea}"/>
        <basename property="idea.filename" file="${idea.download.url}"/>
        <untar dest="${build.dir}" compression="gzip">
            <fileset dir="${build.dir}" includes="${idea.filename}"/>
        </untar>
    </target>

    <!-- Download IntelliJ IDEA distribution -->
    <target name="download.idea"
            depends="mk.buid"
            description="Downloads IntelliJ IDEA artifacts">
        <get src="${idea.download.url}"
             dest="${build.dir}" skipexisting="true"/>
    </target>

    <target name="download.kotlinc" depends="mk.buid">
        <get src="https://github.com/JetBrains/kotlin/releases/download/build-0.12.200/kotlin-compiler-0.12.200.zip"
             dest="${build.dir}" skipexisting="true"/>
    </target>
    <target name="mk.buid">
        <mkdir dir="${build.dir}"/>
    </target>
    <!-- Download IntelliJ IDEA distribution -->
    <target name="kotlinc" depends="download.kotlinc">
        <unzip dest="${build.dir}">
            <fileset dir="${build.dir}" includes="kotlin-compiler-*.zip"/>
        </unzip>
    </target>

    <target name="get.dependencies" depends="kotlinc, idea">

    </target>

    <target name="compile.jps">
        <mkdir dir="${build.dir}/jps-plugin"/>
        <javac classpathref="build.classpath"
               srcdir="${basedir}/jps-plugin/src"
               destdir="${build.dir}/jps-plugin/"/>
        <copy todir="${build.dir}/jps-plugin/">
            <fileset dir="${basedir}/jps-plugin/src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.plugin">
        <typedef resource="org/jetbrains/jet/buildtools/ant/antlib.xml"
                 classpath="${build.dir}/kotlinc/lib/kotlin-ant.jar"/>

        <path id="javac2.classpath">
            <pathelement location="${idea}/lib/javac2.jar"/>
            <pathelement location="${idea}/lib/asm-all.jar"/>
        </path>

        <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>

        <mkdir dir="${build.dir}/plugin"/>
        <javac2 destdir="${build.dir}/plugin"
                classpathref="build.classpath">
            <src path="${basedir}/plugin/src"/>
            <src path="${basedir}/plugin/gen"/>
            <withKotlin externalannotations="${external.annotations.path}"/>
        </javac2>
    </target>
    <target name="build" depends="compile.plugin, compile.jps">
        <mkdir dir="${plugin.destination}"/>

        <copydir src="${basedir}/plugin/resources/" dest="${build.dir}/plugin/"/>
        <copy file="${basedir}/plugin/META-INF/plugin.xml" todir="${build.dir}/plugin/META-INF"/>
        <replace file="${build.dir}/plugin/META-INF/plugin.xml" token="@snapshot@" value="${build.number}"/>
        <jar destfile="${plugin.destination}/haskell-jps-plugin.jar">
            <fileset dir="${build.dir}/jps-plugin/"/>
        </jar>
        <jar destfile="${plugin.destination}/haskell-plugin.jar">
            <fileset dir="${build.dir}/plugin/"/>
        </jar>
        <copy file="${basedir}/lib/kotlin-runtime.jar" todir="${plugin.destination}"/>
        <copy file="${basedir}/lib/json-simple-1.1.1.jar" todir="${plugin.destination}"/>
        <copy file="${basedir}/lib/commons-compress-1.8.jar" todir="${plugin.destination}"/>
        <copy file="${basedir}/lib/pty4j-0.3.jar" todir="${plugin.destination}"/>
        <copy todir="${plugin.destination}" >
            <fileset dir="${basedir}/lib/os/" includes="**"/>
        </copy>

        <zip destfile="${build.dir}/haskell-plugin.zip"
             basedir="${build.dir}"
             includes="haskell-plugin/**"
             update="true"/>
    </target>

    <target name="clean">
        <delete includeEmptyDirs="true">
            <fileset dir="${build.dir}" includes="**/*">
                <exclude name="ideaIU-13.zip"/>
                <exclude name="kotlin-compiler-*.zip"/>
            </fileset>
        </delete>
    </target>

    <target name="generateUpdateXml">
        <delete file="${build.dir}/updatePlugin.xml" />
        <echoxml file="${build.dir}/updatePlugin.xml">
            <plugins>
                <plugin id="org.jetbrains.haskell"
                        url="http://teamcity.jetbrains.com/guestAuth/repository/download/Haskell_Build/.lastSuccessful/haskell-plugin.zip"
                        version="0.5.1-b.${build.number}" />
            </plugins>
        </echoxml>
    </target>
</project>